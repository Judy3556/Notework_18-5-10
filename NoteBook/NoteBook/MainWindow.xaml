<Window x:Class="NoteBook.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:NoteBook"
        mc:Ignorable="d"
        Title="MainWindow" Height="350" Width="525" AllowsTransparency="True" WindowStyle="None" Opacity="0.99" Background="Transparent">
    <Window.Resources>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style x:Key="MyButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Window.TaskbarItemInfo>
        <TaskbarItemInfo/>
    </Window.TaskbarItemInfo>
    <Grid Width=" 517" Height="319" MouseMove="Grid_MouseMove" >
        
        <!-- 版面區塊-->
        <Grid.RowDefinitions >
            <RowDefinition Height=" 390"  ></RowDefinition>
            <RowDefinition ></RowDefinition>
        </Grid.RowDefinitions>


        <!-- 定义格子-->
        <Grid.ColumnDefinitions>
            <ColumnDefinition></ColumnDefinition>
            <ColumnDefinition Width="200" ></ColumnDefinition>
        </Grid.ColumnDefinitions>


        <!-- 内容-->
        

        <Rectangle Grid.Column="1" Fill="Black" x:Name="RightBox" ></Rectangle>
        <StackPanel Grid.Column="1">
            <Border CornerRadius="15,15,1,1" Margin="1"></Border>
            <Button Click="Button_Click" BorderBrush="Black" x:Name="OpenBtn" Background="Black" Foreground="White" Height="50" Style="{DynamicResource MyButtonStyle}" >Open</Button>
            <Button Click="Button_Click_1" BorderBrush="Black" x:Name="SaveBtn" Background="Black" Foreground="White" Height="50">Save</Button>
            <Button Click="Button_Click_2" BorderBrush="Black" x:Name="SaveasBtn" Background="Black" Foreground="White" Height=" 50">Save as</Button>
            <StackPanel Height="40" VerticalAlignment="Top" HorizontalAlignment="Right" Orientation="Horizontal">
                <!--更換主體顏色-->
                <Ellipse Width=" 20" Height=" 20" Fill="Black" Margin=" 10 10 10 10" Stroke="White" StrokeThickness="3" x:Name="ChangeBlack" MouseLeftButtonDown="ChangeBlack_MouseLeftButtonDown" ></Ellipse>
                <Ellipse Width=" 20" Height=" 20" Fill="BurlyWood" Margin="30 10 60 10" InkCanvas.Left="200" Stroke="White" StrokeThickness="3" x:Name="ChangeYellow" MouseLeftButtonDown="ChangeYellow_MouseLeftButtonDown"></Ellipse>
                
            </StackPanel>

            <StackPanel Orientation="Horizontal">
                <Button Margin="10" Background="Black" BorderBrush="Black" Foreground="White" x:Name="SmallSize" MouseLeftButtonDown="SmallSize_MouseLeftButtonDown">A</Button>
                <Button Margin="10" Background="Black" BorderBrush="Black" Foreground="White" x:Name="ModelSize" MouseLeftButtonDown="ModelSize_MouseLeftButtonDown" Click="ModelSize_Click">A</Button>
                <Button Margin="10" Background="Black" BorderBrush="Black" Foreground="White" x:Name="HugeSize" MouseLeftButtonDown="HugeSize_MouseLeftButtonDown">A</Button>

            </StackPanel>

        </StackPanel>

        <!--左边打字区-->
        <Border CornerRadius="15 15 0 0" Margin="3">

        <TextBox Background="LightGray" BorderBrush="White" FontSize="15" Foreground="Black" Opacity=" 1" x:Name="Textarea" AcceptsReturn="True" TextWrapping="Wrap" ></TextBox>
        </Border>

        <!--關閉按鈕-->
        <StackPanel Height="40" VerticalAlignment="Top" HorizontalAlignment="Right">
            <Ellipse Width=" 15" Height=" 15" Fill="Coral" Margin="8" x:Name="CloseButton" MouseLeftButtonDown="CloseButton_MouseLeftButtonDown" ></Ellipse>
        </StackPanel>

    </Grid>
</Window>
